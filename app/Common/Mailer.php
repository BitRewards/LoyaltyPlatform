<?php

namespace App\Common;

use Illuminate\Mail\Mailable;

class Mailer extends \Illuminate\Mail\Mailer
{
    const DO_NOT_SEND_EMAIL_SUBSTRING_INDICATOR = '**REMOVED**';

    private function isWhitelisted($email)
    {
        if (\HApp::isProduction()) {
            return true;
        }

        $whitelist = config('mail.send_to_whitelist');

        if (!is_array($whitelist)) {
            return true;
        }

        foreach ($whitelist as $item) {
            if (fnmatch($item, $email)) {
                return true;
            }
        }

        return false;
    }

    private function shouldBeSent($view)
    {
        if ($view instanceof Mailable) {
            $isEmailProvided = false;

            $emails = $view->to;

            foreach ($emails as $email) {
                if (!empty($email['address'])) {
                    $isEmailProvided = true;

                    if (!$this->isWhitelisted($email['address'])) {
                        return false;
                    }

                    if (false !== strpos($email['address'], self::DO_NOT_SEND_EMAIL_SUBSTRING_INDICATOR)) {
                        return false;
                    }

                    break;
                }
            }

            if (!$isEmailProvided) {
                return false;
            }
        }

        return true;
    }

    public function queue($view, $queue = null)
    {
        if (!$this->shouldBeSent($view)) {
            return null;
        }

        return parent::queue($view, $queue); // TODO: Change the autogenerated stub
    }

    public function send($view, array $data = [], $callback = null)
    {
        if (!$this->shouldBeSent($view)) {
            return;
        }

        parent::send($view, $data, $callback);
    }
}
